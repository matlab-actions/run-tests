name: Build and Test
on: [push]
permissions:
  contents: read

jobs:
  bat:
    name: Build and Test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 20
      - name: Perform npm tasks
        run: npm run ci
      - uses: actions/upload-artifact@v4
        with:
          name: built-action
          path: |
            **/*
            !node_modules/

  integ:
    needs: bat
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-14]
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: built-action
      - name: Perform 'setup-matlab'
        uses: matlab-actions/setup-matlab@v2
        with:
          products: |
            Simulink
            Simulink_Test
            Simulink_Coverage
      - name: Run MATLAB Tests
        uses: ./
        with:
          source-folder: sample
          startup-options: -logfile output.log
      - name: Verify option application
        run: |
          set -e
          grep "Running TheTruth" output.log
          grep "Done TheTruth" output.log
          grep "1 Passed" output.log
        shell: bash
      - name: Generate Model
        uses: matlab-actions/run-command@v2
        with: 
            command: cd('sample'),createSampleModel('temp_model'),sltest.testmanager.createTestsFromModel('sltestfile', 'temp_model');
      - name: Set up diary for logging
        run: echo 'diary console.log' >> startup.m
      - name: Run run-test command
        uses: ./
        with:
            test-results-simulink-test: test-results/simulinktest.mldatx
            model-coverage-cobertura: test-results/modelcoverage.xml
            test-results-pdf: test-results/pdf-results.pdf
            test-results-junit: test-results/results.xml
            code-coverage-cobertura: test-results/coverage.xml
            code-coverage-html: test-results/coverage.html
            model-coverage-html: test-results/modelcoverage.html
            test-results-html: test-results/html-results.html
            select-by-folder: sample
            strict: true
            use-parallel: true
            output-detail: Detailed
            logging-level: Detailed
      - name: Verify artifacts generation
        run: |
            (test -f test-results/simulinktest.mldatx) || (echo "File simulinktest.mldatx does not exist" && exit 1)
            (test -f test-results/modelcoverage.xml) || (echo "File modelcoverage.xml does not exist" && exit 1)
            (test -f test-results/pdf-results.pdf) || (echo "File pdf-results.pdf does not exist" && exit 1)
            (test -f test-results/results.xml) || (echo "File results.xml does not exist" && exit 1)
            (test -f test-results/coverage.xml) || (echo "File coverage.xml does not exist" && exit 1)
            (test -f test-results/coverage.html) || (echo "File coverage.html does not exist" && exit 1)
            (test -f test-results/modelcoverage.html) || (echo "File modelcoverage.html does not exist" && exit 1)
            (test -f test-results/html-results.html) || (echo "File html-results.html does not exist" && exit 1)
            grep -q "runner.addPlugin(FailOnWarningsPlugin())" console.log
            grep -q "runInParallel" console.log
            grep -q "'OutputDetail', 3" console.log
            grep -q "'LoggingLevel', 3" console.log
        shell: bash
